-- Instances:
local OnisCmds = game.Players.LocalPlayer:WaitForChild("PlayerGui"):FindFirstChild("OnisCmds")
if OnisCmds then
    OnisCmds:Destroy()
    wait(0.3)
end

OnisCmds = Instance.new("ScreenGui")
OnisCmds.Name = "OnisCmds"
OnisCmds.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
OnisCmds.IgnoreGuiInset = true
OnisCmds.ResetOnSpawn = false

local Frame = Instance.new("Frame")
Frame.Parent = OnisCmds
Frame.AnchorPoint = Vector2.new(0.5, 0.5)
Frame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
Frame.BackgroundTransparency = 0.500
Frame.BorderColor3 = Color3.fromRGB(0, 0, 0)
Frame.BorderSizePixel = 0
Frame.Position = UDim2.new(0.5, 0, 0.045, 0)
Frame.Size = UDim2.new(0.60, 0, 0.0786695555, 0)

local Error = Instance.new("TextLabel")
Error.Parent = Frame
Error.AnchorPoint = Vector2.new(0.5, 0.5)
Error.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Error.BackgroundTransparency = 1.000
Error.BorderColor3 = Color3.fromRGB(0, 0, 0)
Error.BorderSizePixel = 0
Error.Position = UDim2.new(0.499959648, 0, 0.7501086, 0)
Error.Size = UDim2.new(0.990477383, 0, 0.49978295, 0)
Error.Visible = false
Error.Font = Enum.Font.Cartoon
Error.Text = "Error: Could not find player \"onis_202\""
Error.TextColor3 = Color3.fromRGB(247, 108, 123)
Error.TextScaled = true
Error.TextSize = 14.000
Error.TextWrapped = true
Error.TextXAlignment = Enum.TextXAlignment.Left

local Credits = Instance.new("TextLabel")
Credits.Parent = Frame
Credits.AnchorPoint = Vector2.new(0.5, 0.5)
Credits.BackgroundTransparency = 1.000
Credits.BorderSizePixel = 0
Credits.Position = UDim2.new(0.499056607, 0, 0.250108838, 0)
Credits.Size = UDim2.new(0.988671303, 0, 0.500217319, 0)
Credits.Font = Enum.Font.Cartoon
Credits.Text = "CMD:"
Credits.TextColor3 = Color3.fromRGB(247, 208, 15)
Credits.TextScaled = true
Credits.TextSize = 14.000
Credits.TextWrapped = true
Credits.TextXAlignment = Enum.TextXAlignment.Left

local Input = Instance.new("TextBox")
Input.Parent = Credits
Input.AnchorPoint = Vector2.new(0.5, 0.5)
Input.BackgroundTransparency = 1.000
Input.BorderSizePixel = 0
Input.Position = UDim2.new(0.65, 0, 0.49999997, 0)
Input.Size = UDim2.new(1.1, 0, 0.99999994, 0)
Input.Font = Enum.Font.Cartoon
Input.Text = ""
Input.TextColor3 = Color3.fromRGB(255, 255, 255)
Input.TextScaled = true
Input.TextSize = 14.000
Input.TextWrapped = true
Input.TextXAlignment = Enum.TextXAlignment.Left

local Success = Instance.new("TextLabel")
Success.Parent = Frame
Success.AnchorPoint = Vector2.new(0.5, 0.5)
Success.BackgroundTransparency = 1.000
Success.BorderSizePixel = 0
Success.Position = UDim2.new(0.499959648, 0, 0.7501086, 0)
Success.Size = UDim2.new(0.990477383, 0, 0.49978295, 0)
Success.Font = Enum.Font.Cartoon
Success.Text = "Type to get suggestion"
Success.TextColor3 = Color3.fromRGB(172, 240, 148)
Success.TextScaled = true
Success.TextSize = 14.000
Success.TextWrapped = true
Success.TextXAlignment = Enum.TextXAlignment.Left

local commands = {
    "test",
    "testarg",
    "spectate",
    "dex",
    "spy"
} -- List of available commands

local currentSuggestion

local function autoComplete(prefix)
    local suggestions = {}
    for _, cmd in ipairs(commands) do
        if string.sub(cmd, 1, #prefix) == prefix then
            table.insert(suggestions, cmd)
        end
    end
    return suggestions
end


local function executeCommand(cmd)
    -- Split the command into words
    local words = {}
    for word in cmd:gmatch("%S+") do
        table.insert(words, word)
    end
    
    -- Extract the command name and arguments
    local cmdName = table.remove(words, 1)
    local args = words

    
    if cmdName == "spectate" or currentSuggestion == "spectate" then
        loadstring(game:HttpGet("https://raw.githubusercontent.com/oniiss/Roblox-Scripts/main/Spectator%20Script"))()
    elseif cmdName == "dex" or currentSuggestion == "dex" then
        loadstring(game:HttpGet("https://cdn.wearedevs.net/scripts/Dex%20Explorer.txt"))()
    elseif cmdName == "spy" or currentSuggestion == "spy" then
        loadstring(game:HttpGet("https://pastebin.com/raw/66NjbMN7",true))()
    else
        -- handle unknown command
    end
end

local function updateAutoComplete(suggestions)
    for i, suggestion in ipairs(suggestions) do
        local suggestionLabel = AutoCompleteFrame:FindFirstChild("Suggestion" .. i)
        if not suggestionLabel then
            suggestionLabel = Instance.new("TextLabel")
            suggestionLabel.Name = "Suggestion" .. i
            suggestionLabel.Parent = AutoCompleteFrame
            suggestionLabel.BackgroundTransparency = 1
            suggestionLabel.Size = UDim2.new(1, 0, 0, 20)
            suggestionLabel.Position = UDim2.new(0, 0, 0, (i - 1) * 20)
            suggestionLabel.Font = Enum.Font.Cartoon
            suggestionLabel.TextSize = 14
            suggestionLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
            suggestionLabel.TextWrapped = true
            suggestionLabel.TextXAlignment = Enum.TextXAlignment.Left
        end
        suggestionLabel.Text = suggestion
        suggestionLabel.Visible = true
    end
    for i = #suggestions + 1, 5 do
        local suggestionLabel = AutoCompleteFrame:FindFirstChild("Suggestion" .. i)
        if suggestionLabel then
            suggestionLabel.Visible = false
        end
    end
end

local function showSuggestion(suggestion)
    if suggestion then
        Success.Text = "Suggestion: " .. suggestion
        currentSuggestion = suggestion
    else
        Success.Text = "Type to get suggestion"
    end
end

Input:GetPropertyChangedSignal("Text"):Connect(function()
    local text = Input.Text
    local keyCode = game:GetService("UserInputService"):GetKeysPressed()[1]
    if keyCode and keyCode.KeyCode == Enum.KeyCode.Tab then
        local suggestions = autoComplete(text)
        if #suggestions > 0 then
            local bestMatch = suggestions[1]
            Input.Text = bestMatch
            Input.CursorPosition = #bestMatch + 1
            updateAutoComplete({})
            showSuggestion(nil)
        end
    else
        local suggestions = autoComplete(text)
        if #suggestions > 0 then
            local bestMatch = suggestions[1]
            showSuggestion(bestMatch)
        else
            Credits.Text = "CMD:"
            showSuggestion(nil)
        end
    end
end)

Input.FocusLost:Connect(function(enterPressed)
    if enterPressed then
        local cmd = Input.Text
        Input.Text = ""
        executeCommand(cmd)
        AutoCompleteFrame.Visible = false
    end
end)
